@page "/resources/{state:int}"
@using WarehouseManagement.Contracts.Models.WarehouseResource
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>@(State == 1 ? "Ресурсы" : "Архивные ресурсы")</PageTitle>

<h1>@(State == 1 ? "Ресурсы" : "Архивные ресурсы")</h1>

@if (State == 1) // Кнопки только на странице рабочих ресурсов
{
    <div class="mb-3">
        <button class="btn btn-primary me-2" @onclick="GoToAdd">Добавить</button>
        <button class="btn btn-secondary" @onclick="GoToArchived">К архивным</button>
    </div>
}
else if (State == 2) // Кнопка "К рабочим" на странице архивных ресурсов
{
    <div class="mb-3">
        <button class="btn btn-secondary" @onclick="GoToWorking">К рабочим</button>
    </div>
}

@if (resources == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Наименование</th>
            </tr>
        </thead>
        <tbody>
            @if (resources.Any())
            {
                @foreach (var resource in resources)
                {
                    <tr @onclick="() => GoToEdit(resource.Id)" style="cursor: pointer;">
                        <td>@resource.Name</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="1">Ресурсы не найдены.</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public int State { get; set; } // 1 - Working, 2 - Archived

    private List<WarehouseResourceDto>? resources;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Определяем состояние для запроса к API (1 -> Working, 2 -> Archived)
            var apiState = State;
            resources = await Http.GetFromJsonAsync<List<WarehouseResourceDto>>($"api/resources/{apiState}") ?? new();
        }
        catch (Exception ex)
        {
            // TODO: Обработка ошибок (например, показ сообщения пользователю)
            Console.Error.WriteLine($"Ошибка загрузки ресурсов: {ex}");
            resources = new List<WarehouseResourceDto>(); // Или показать сообщение об ошибке
        }
    }

    private void GoToAdd()
    {
        Navigation.NavigateTo("/resources/form/");
    }

    private void GoToArchived()
    {
        Navigation.NavigateTo("/resources/2");
    }

    private void GoToWorking()
    {
         Navigation.NavigateTo("/resources/1");
    }

    private void GoToEdit(Guid id)
    {
        Navigation.NavigateTo($"/resources/form/{id}");
    }
}